/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -a daemon/dbusadaptor -p app/daemonproxy daemon/org.pebbled.xml
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef DAEMONPROXY_H_1404657374
#define DAEMONPROXY_H_1404657374

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.pebbled
 */
class OrgPebbledInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.pebbled"; }

public:
    OrgPebbledInterface(const QString &service = "org.pebbled",
                        const QString &path = "/",
                        const QDBusConnection &connection = QDBusConnection::sessionBus(),
                        QObject *parent = 0);

    ~OrgPebbledInterface();

    Q_PROPERTY(QString address READ address)
    inline QString address() const
    { return qvariant_cast< QString >(property("address")); }

    Q_PROPERTY(bool connected READ connected)
    inline bool connected() const
    { return qvariant_cast< bool >(property("connected")); }

    Q_PROPERTY(QString name READ name)
    inline QString name() const
    { return qvariant_cast< QString >(property("name")); }

    Q_PROPERTY(QVariantMap pebble READ pebble)
    inline QVariantMap pebble() const
    { return qvariant_cast< QVariantMap >(property("pebble")); }

public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
    void connectedChanged();
    void pebbleChanged();
};

namespace org {
  typedef ::OrgPebbledInterface pebbled;
}
#endif
